/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.tetrate.tsb.gateway.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.tetrate.tsb.gateway.models.V2IngressGatewaySpecAuthentication;
import io.tetrate.tsb.gateway.models.V2IngressGatewaySpecAuthorization;
import io.tetrate.tsb.gateway.models.V2IngressGatewaySpecRateLimiting;
import io.tetrate.tsb.gateway.models.V2IngressGatewaySpecRouting;
import io.tetrate.tsb.gateway.models.V2IngressGatewaySpecTls;
import io.tetrate.tsb.gateway.models.V2IngressGatewaySpecXxxOldAuthentication;
import io.tetrate.tsb.gateway.models.V2IngressGatewaySpecXxxOldAuthorization;
import java.io.IOException;

/**
 * V2IngressGatewaySpecHttp
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-20T22:11:16.316Z[Etc/UTC]")
public class V2IngressGatewaySpecHttp {
  public static final String SERIALIZED_NAME_AUTHENTICATION = "authentication";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION)
  private V2IngressGatewaySpecAuthentication authentication;

  public static final String SERIALIZED_NAME_AUTHORIZATION = "authorization";
  @SerializedName(SERIALIZED_NAME_AUTHORIZATION)
  private V2IngressGatewaySpecAuthorization authorization;

  public static final String SERIALIZED_NAME_HOSTNAME = "hostname";
  @SerializedName(SERIALIZED_NAME_HOSTNAME)
  private String hostname;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PORT = "port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private Integer port;

  public static final String SERIALIZED_NAME_RATE_LIMITING = "rateLimiting";
  @SerializedName(SERIALIZED_NAME_RATE_LIMITING)
  private V2IngressGatewaySpecRateLimiting rateLimiting;

  public static final String SERIALIZED_NAME_ROUTING = "routing";
  @SerializedName(SERIALIZED_NAME_ROUTING)
  private V2IngressGatewaySpecRouting routing;

  public static final String SERIALIZED_NAME_TLS = "tls";
  @SerializedName(SERIALIZED_NAME_TLS)
  private V2IngressGatewaySpecTls tls;

  public static final String SERIALIZED_NAME_XXX_OLD_AUTHENTICATION = "xxxOldAuthentication";
  @SerializedName(SERIALIZED_NAME_XXX_OLD_AUTHENTICATION)
  private V2IngressGatewaySpecXxxOldAuthentication xxxOldAuthentication;

  public static final String SERIALIZED_NAME_XXX_OLD_AUTHORIZATION = "xxxOldAuthorization";
  @SerializedName(SERIALIZED_NAME_XXX_OLD_AUTHORIZATION)
  private V2IngressGatewaySpecXxxOldAuthorization xxxOldAuthorization;


  public V2IngressGatewaySpecHttp authentication(V2IngressGatewaySpecAuthentication authentication) {
    
    this.authentication = authentication;
    return this;
  }

   /**
   * Get authentication
   * @return authentication
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V2IngressGatewaySpecAuthentication getAuthentication() {
    return authentication;
  }


  public void setAuthentication(V2IngressGatewaySpecAuthentication authentication) {
    this.authentication = authentication;
  }


  public V2IngressGatewaySpecHttp authorization(V2IngressGatewaySpecAuthorization authorization) {
    
    this.authorization = authorization;
    return this;
  }

   /**
   * Get authorization
   * @return authorization
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V2IngressGatewaySpecAuthorization getAuthorization() {
    return authorization;
  }


  public void setAuthorization(V2IngressGatewaySpecAuthorization authorization) {
    this.authorization = authorization;
  }


  public V2IngressGatewaySpecHttp hostname(String hostname) {
    
    this.hostname = hostname;
    return this;
  }

   /**
   * Hostname with which the service can be expected to be accessed by clients.
   * @return hostname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Hostname with which the service can be expected to be accessed by clients.")

  public String getHostname() {
    return hostname;
  }


  public void setHostname(String hostname) {
    this.hostname = hostname;
  }


  public V2IngressGatewaySpecHttp name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * A name assigned to the server.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A name assigned to the server.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public V2IngressGatewaySpecHttp port(Integer port) {
    
    this.port = port;
    return this;
  }

   /**
   * The port where the server is exposed.
   * minimum: 0
   * maximum: 4294967295
   * @return port
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The port where the server is exposed.")

  public Integer getPort() {
    return port;
  }


  public void setPort(Integer port) {
    this.port = port;
  }


  public V2IngressGatewaySpecHttp rateLimiting(V2IngressGatewaySpecRateLimiting rateLimiting) {
    
    this.rateLimiting = rateLimiting;
    return this;
  }

   /**
   * Get rateLimiting
   * @return rateLimiting
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V2IngressGatewaySpecRateLimiting getRateLimiting() {
    return rateLimiting;
  }


  public void setRateLimiting(V2IngressGatewaySpecRateLimiting rateLimiting) {
    this.rateLimiting = rateLimiting;
  }


  public V2IngressGatewaySpecHttp routing(V2IngressGatewaySpecRouting routing) {
    
    this.routing = routing;
    return this;
  }

   /**
   * Get routing
   * @return routing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V2IngressGatewaySpecRouting getRouting() {
    return routing;
  }


  public void setRouting(V2IngressGatewaySpecRouting routing) {
    this.routing = routing;
  }


  public V2IngressGatewaySpecHttp tls(V2IngressGatewaySpecTls tls) {
    
    this.tls = tls;
    return this;
  }

   /**
   * Get tls
   * @return tls
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V2IngressGatewaySpecTls getTls() {
    return tls;
  }


  public void setTls(V2IngressGatewaySpecTls tls) {
    this.tls = tls;
  }


  public V2IngressGatewaySpecHttp xxxOldAuthentication(V2IngressGatewaySpecXxxOldAuthentication xxxOldAuthentication) {
    
    this.xxxOldAuthentication = xxxOldAuthentication;
    return this;
  }

   /**
   * Get xxxOldAuthentication
   * @return xxxOldAuthentication
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V2IngressGatewaySpecXxxOldAuthentication getXxxOldAuthentication() {
    return xxxOldAuthentication;
  }


  public void setXxxOldAuthentication(V2IngressGatewaySpecXxxOldAuthentication xxxOldAuthentication) {
    this.xxxOldAuthentication = xxxOldAuthentication;
  }


  public V2IngressGatewaySpecHttp xxxOldAuthorization(V2IngressGatewaySpecXxxOldAuthorization xxxOldAuthorization) {
    
    this.xxxOldAuthorization = xxxOldAuthorization;
    return this;
  }

   /**
   * Get xxxOldAuthorization
   * @return xxxOldAuthorization
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V2IngressGatewaySpecXxxOldAuthorization getXxxOldAuthorization() {
    return xxxOldAuthorization;
  }


  public void setXxxOldAuthorization(V2IngressGatewaySpecXxxOldAuthorization xxxOldAuthorization) {
    this.xxxOldAuthorization = xxxOldAuthorization;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V2IngressGatewaySpecHttp v2IngressGatewaySpecHttp = (V2IngressGatewaySpecHttp) o;
    return Objects.equals(this.authentication, v2IngressGatewaySpecHttp.authentication) &&
        Objects.equals(this.authorization, v2IngressGatewaySpecHttp.authorization) &&
        Objects.equals(this.hostname, v2IngressGatewaySpecHttp.hostname) &&
        Objects.equals(this.name, v2IngressGatewaySpecHttp.name) &&
        Objects.equals(this.port, v2IngressGatewaySpecHttp.port) &&
        Objects.equals(this.rateLimiting, v2IngressGatewaySpecHttp.rateLimiting) &&
        Objects.equals(this.routing, v2IngressGatewaySpecHttp.routing) &&
        Objects.equals(this.tls, v2IngressGatewaySpecHttp.tls) &&
        Objects.equals(this.xxxOldAuthentication, v2IngressGatewaySpecHttp.xxxOldAuthentication) &&
        Objects.equals(this.xxxOldAuthorization, v2IngressGatewaySpecHttp.xxxOldAuthorization);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authentication, authorization, hostname, name, port, rateLimiting, routing, tls, xxxOldAuthentication, xxxOldAuthorization);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V2IngressGatewaySpecHttp {\n");
    sb.append("    authentication: ").append(toIndentedString(authentication)).append("\n");
    sb.append("    authorization: ").append(toIndentedString(authorization)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    rateLimiting: ").append(toIndentedString(rateLimiting)).append("\n");
    sb.append("    routing: ").append(toIndentedString(routing)).append("\n");
    sb.append("    tls: ").append(toIndentedString(tls)).append("\n");
    sb.append("    xxxOldAuthentication: ").append(toIndentedString(xxxOldAuthentication)).append("\n");
    sb.append("    xxxOldAuthorization: ").append(toIndentedString(xxxOldAuthorization)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

