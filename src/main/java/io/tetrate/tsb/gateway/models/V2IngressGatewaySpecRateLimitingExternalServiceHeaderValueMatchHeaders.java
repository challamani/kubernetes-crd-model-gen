/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.tetrate.tsb.gateway.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * V2IngressGatewaySpecRateLimitingExternalServiceHeaderValueMatchHeaders
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-20T22:11:16.316Z[Etc/UTC]")
public class V2IngressGatewaySpecRateLimitingExternalServiceHeaderValueMatchHeaders {
  public static final String SERIALIZED_NAME_EXACT = "exact";
  @SerializedName(SERIALIZED_NAME_EXACT)
  private String exact;

  public static final String SERIALIZED_NAME_PREFIX = "prefix";
  @SerializedName(SERIALIZED_NAME_PREFIX)
  private String prefix;

  public static final String SERIALIZED_NAME_REGEX = "regex";
  @SerializedName(SERIALIZED_NAME_REGEX)
  private String regex;


  public V2IngressGatewaySpecRateLimitingExternalServiceHeaderValueMatchHeaders exact(String exact) {
    
    this.exact = exact;
    return this;
  }

   /**
   * Exact string match.
   * @return exact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Exact string match.")

  public String getExact() {
    return exact;
  }


  public void setExact(String exact) {
    this.exact = exact;
  }


  public V2IngressGatewaySpecRateLimitingExternalServiceHeaderValueMatchHeaders prefix(String prefix) {
    
    this.prefix = prefix;
    return this;
  }

   /**
   * Prefix-based match.
   * @return prefix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Prefix-based match.")

  public String getPrefix() {
    return prefix;
  }


  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }


  public V2IngressGatewaySpecRateLimitingExternalServiceHeaderValueMatchHeaders regex(String regex) {
    
    this.regex = regex;
    return this;
  }

   /**
   * ECMAscript style regex-based match.
   * @return regex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ECMAscript style regex-based match.")

  public String getRegex() {
    return regex;
  }


  public void setRegex(String regex) {
    this.regex = regex;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V2IngressGatewaySpecRateLimitingExternalServiceHeaderValueMatchHeaders v2IngressGatewaySpecRateLimitingExternalServiceHeaderValueMatchHeaders = (V2IngressGatewaySpecRateLimitingExternalServiceHeaderValueMatchHeaders) o;
    return Objects.equals(this.exact, v2IngressGatewaySpecRateLimitingExternalServiceHeaderValueMatchHeaders.exact) &&
        Objects.equals(this.prefix, v2IngressGatewaySpecRateLimitingExternalServiceHeaderValueMatchHeaders.prefix) &&
        Objects.equals(this.regex, v2IngressGatewaySpecRateLimitingExternalServiceHeaderValueMatchHeaders.regex);
  }

  @Override
  public int hashCode() {
    return Objects.hash(exact, prefix, regex);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V2IngressGatewaySpecRateLimitingExternalServiceHeaderValueMatchHeaders {\n");
    sb.append("    exact: ").append(toIndentedString(exact)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    regex: ").append(toIndentedString(regex)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

